name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    name: Deploy Changed Pairs
    runs-on: ubuntu-latest
    env:
      TERRAFORM_STATUS: apply
      TF_VAR_CSCO_NXOS_TF_USERNAME: ${{ secrets.TF_VAR_CSCO_NXOS_TF_USERNAME }}
      TF_VAR_CSCO_NXOS_TF_PASSWORD: ${{ secrets.TF_VAR_CSCO_NXOS_TF_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Find changed pair directories
        id: find_dirs
        run: |
          echo "Changed directories:"
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^SITE-' | grep 'PAIR-' | cut -d/ -f1,2 | sort -u)
          echo "$CHANGED_DIRS"

          echo "::set-output name=pairs::$(echo $CHANGED_DIRS | tr '\n' ' ')"

      - name: Run Terraform in changed directories
        if: steps.find_dirs.outputs.pairs != ''
        run: |
          for dir in ${{ steps.find_dirs.outputs.pairs }}; do
            echo "Processing directory: $dir"
            cd $dir
            terraform init
            terraform fmt
            terraform validate

            if [ "${{ github.event_name }}" = "pull_request" ]; then
              terraform plan || exit 1
            fi

            if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ env.TERRAFORM_STATUS }}" = "apply" ]; then
              terraform apply --auto-approve || exit 1
            fi

            if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ env.TERRAFORM_STATUS }}" = "destroy" ]; then
              terraform destroy --auto-approve || exit 1
            fi

            cd - || exit 1
          done